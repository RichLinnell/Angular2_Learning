{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"task",
				"taskTooltip	property"
			],
			[
				"se",
				"selector	property"
			],
			[
				"Pipe",
				"PipeTransform	alias"
			],
			[
				"Tas",
				"TaskIconsComponent	class"
			],
			[
				"Tasks",
				"TasksComponent	class"
			],
			[
				"T",
				"TasksService	const"
			],
			[
				"templ",
				"templateUrl	property"
			],
			[
				"Pip",
				"PipeTransform	alias"
			],
			[
				"Event",
				"EventEmitter	alias"
			],
			[
				"cle",
				"clearInterval	function"
			],
			[
				"import",
				"import	imports a module …"
			],
			[
				"new",
				"newMethod	local var"
			],
			[
				"a",
				"args	parameter"
			],
			[
				"ori",
				"originalMethod	local var"
			],
			[
				"A",
				"Array	interface"
			],
			[
				"Lo",
				"LogChanges	function"
			],
			[
				"prop",
				"propertyValue	local var"
			],
			[
				"de",
				"defineProperty	method"
			],
			[
				"Gr",
				"Greeting	class"
			],
			[
				"p",
				"push	method"
			],
			[
				"IEx",
				"IExceptionHandlerSettings	interface"
			],
			[
				"IE",
				"IExceptionArrayItem	interface"
			],
			[
				"N",
				"Nonesense	class"
			],
			[
				"t",
				"togglePause	method"
			],
			[
				"set",
				"setInterval	function"
			],
			[
				"s",
				"seconds	property"
			],
			[
				"boo",
				"bootstrap	alias"
			],
			[
				"const",
				"constructor	keyword"
			],
			[
				"nu",
				"number	keyword"
			],
			[
				"cl",
				"class	class …"
			]
		]
	},
	"buffers":
	[
		{
			"file": "pomodoro-timer.ts",
			"settings":
			{
				"buffer_size": 1010,
				"line_ending": "Windows"
			}
		},
		{
			"file": "pomodoro-timer.html",
			"settings":
			{
				"buffer_size": 448,
				"line_ending": "Windows"
			}
		},
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 1002,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import {\n	Component,\n	Input,\n	Pipe,\n	PipeTransform,\n	Directive,\n	OnInit,\n	HostListener\n} from '@angular/core';\nimport {bootstrap} from '@angular/platform-browser-dynamic';\n\ninterface Task {\n	name: string;\n	deadline: Date;\n	queued: boolean;\n	pomodorosRequired: number;\n}\n\nclass TaskService {\n	public taskStore: Array<Task> = [];\n\n	constructor(){\n		const tasks = [\n		{			\n			name: \"Code an HTML Table\",\n			deadline: \"June 23 2015\",\n			pomodorosRequired: 1\n		},\n		{\n			name: \"Sketch a wireframe for the new homepage\",\n			deadline: \"June 24 2016\",\n			pomodorosRequired: 2\n		},\n		{\n			name: \"Style table with bootstrap styles\",\n			deadline: \"June 25 2016\",\n			pomodorosRequired: 1\n		},\n		{\n			name: \"Reinforce SEO with custom sitemap.xml\",\n			deadline: \"June 26 2016\",\n			pomodorosRequired: 3\n		},\n		];\n\n		this.taskStore = tasks.map(task => {\n			return {\n				name: task.name,\n				deadline: new Date(task.deadline),\n				queued: false,\n				pomodorosRequired: task.pomodorosRequired\n			};\n		});\n	}\n}\n\n@Pipe({\n	name: 'pomodoroFormattedTime'\n})\nclass FormattedTimePipe implements PipeTransform {\n	transform(totalMinutes: number): string {\n		let minutes: number = totalMinutes % 60;\n		let hours: number = Math.floor(totalMinutes / 60);\n		return `${hours}h:${minutes}m`;\n	}\n}\n\n@Pipe({\n	name: 'pomodoroQueuedOnly',\n	pure: false\n})\nclass QueuedOnlyPipe implements PipeTransform{\n	transform(tasks: Task[], ...args: any[]): Task[] {\n		return tasks.filter((task: Task) => {\n			return task.queued === args[0];\n		});\n	}	\n}\n\n@Directive({\n	selector: '[task]'\n})\nclass TaskTooltipDirective {\n	private defaultTooltipText: string;\n	@Input() task: Task;\n	@Input() taskTooltip: any;\n\n	@HostListener('mouseover')\n	onMouseOver(){\n		if(!this.defaultTooltipText && this.taskTooltip){\n			this.defaultTooltipText = this.taskTooltip.innerText;\n		}\n		this.taskTooltip.innerText = this.task.name;\n	}\n	@HostListener('mouseout')\n	onMouseOut() {\n		if(this.taskTooltip){\n			this.taskTooltip.innerText = this.defaultTooltipText;\n		}\n	}\n}\n\n@Component({\n	selector: 'pomodoro-task-icons',\n	template: `<img *ngFor=\"let icon of icons\"\n					src=\"/assets/img/pomodoro.png\"\n					width=\"{{size}}\">`\n})\nclass TaskIconsComponent implements OnInit {\n	@Input() task: Task;\n	icons: Object[] = [];\n	@Input() size: number;\n\n	ngOnInit() {\n		this.icons.length = this.task.pomodorosRequired;\n		this.icons.fill({name: this.task.name});\n	}\n}\n@Component({\n		selector: 'pomodoro-tasks',\n		directives: [TaskIconsComponent, TaskTooltipDirective],\n		pipes: [FormattedTimePipe, QueuedOnlyPipe],\n		styleUrls: ['pomodoro-tasks.css'],\n		templateUrl: 'pomodoro-tasks.html'\n	})\n	class TasksComponent {\n		today: Date;\n		tasks: Task[];\n		queuedPomodoros: number;\n		queueHeaderMapping: any = {\n			'=0': 'No pomodoros',\n			'=1': 'One pomodoro',\n			'other': '# pomodoros'\n		};\n		\n		constructor() {\n			const taskService: TaskService = new TaskService();\n			this.tasks = taskService.taskStore;\n			this.today = new Date();\n			this.updateQueuedPomodoros();\n		}\n\n		toggleTask(task: Task): void {\n			task.queued = !task.queued;\n			this.updateQueuedPomodoros();\n		}\n\n		private updateQueuedPomodoros(): void {\n			this.queuedPomodoros = this.tasks\n				.filter((task: Task) => task.queued)\n				.reduce((pomodoros: number, queuedTask: Task) => {\n					return pomodoros + queuedTask.pomodorosRequired;\n			}, 0);\n		}\n	};\n\n\n\nbootstrap(TasksComponent);",
			"file": "pomodoro-tasks.ts",
			"file_size": 3513,
			"file_write_time": 131152407586503425,
			"settings":
			{
				"buffer_size": 3359,
				"line_ending": "Windows"
			}
		},
		{
			"file": "pomodoro-tasks.css",
			"settings":
			{
				"buffer_size": 74,
				"line_ending": "Windows",
				"name": "h3, p {"
			}
		},
		{
			"file": "pomodoro-tasks.html",
			"settings":
			{
				"buffer_size": 1913,
				"line_ending": "Windows"
			}
		},
		{
			"file": "tsconfig.json",
			"settings":
			{
				"buffer_size": 407,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Greetings.ts",
			"settings":
			{
				"buffer_size": 200,
				"line_ending": "Windows",
				"name": "export class Greeting{"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"git",
				"Github: Repository"
			],
			[
				"pack	",
				"Package Control: Install Package"
			]
		],
		"width": 912.0
	},
	"console":
	{
		"height": 113.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/angular2/Other.ts",
		"/C/angular2/Greeter.ts",
		"/C/Windows/Logs/CBS/CBS.log",
		"/C/angular2/.gitignore",
		"/C/angular2/tsconfig.json",
		"/C/angular2/systemjs.config.js",
		"/C/angular2/package.json",
		"/C/angular2/pomodoro-timer.ts",
		"/C/angular2/index.html",
		"/C/angular2/hello-angular.ts",
		"/C/angular2/iVehicle.ts",
		"/C/angular2/duck-tape.ts",
		"/C/angular2/typings.json",
		"/C/Users/Rich/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/angular2/assets/img/pomodoro.png"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pomodoro-timer.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1010,
						"regions":
						{
						},
						"selection":
						[
							[
								324,
								324
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"translate_tabs_to_spaces": false,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pomodoro-timer.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 448,
						"regions":
						{
						},
						"selection":
						[
							[
								441,
								441
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1002,
						"regions":
						{
						},
						"selection":
						[
							[
								630,
								630
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "pomodoro-tasks.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3359,
						"regions":
						{
						},
						"selection":
						[
							[
								3331,
								3331
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "pomodoro-tasks.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 74,
						"regions":
						{
						},
						"selection":
						[
							[
								74,
								74
							]
						],
						"settings":
						{
							"auto_name": "h3, p {",
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "pomodoro-tasks.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1913,
						"regions":
						{
						},
						"selection":
						[
							[
								493,
								493
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "tsconfig.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 407,
						"regions":
						{
						},
						"selection":
						[
							[
								164,
								170
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Greetings.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 200,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "export class Greeting{",
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 160.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 160.0
	},
	"pinned_build_system": "",
	"project": "angular2.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 188.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
