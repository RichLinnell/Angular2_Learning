{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Event",
				"EventEmitter	alias"
			],
			[
				"cle",
				"clearInterval	function"
			],
			[
				"import",
				"import	imports a module …"
			],
			[
				"new",
				"newMethod	local var"
			],
			[
				"a",
				"args	parameter"
			],
			[
				"ori",
				"originalMethod	local var"
			],
			[
				"A",
				"Array	interface"
			],
			[
				"Lo",
				"LogChanges	function"
			],
			[
				"prop",
				"propertyValue	local var"
			],
			[
				"de",
				"defineProperty	method"
			],
			[
				"Gr",
				"Greeting	class"
			],
			[
				"p",
				"push	method"
			],
			[
				"IEx",
				"IExceptionHandlerSettings	interface"
			],
			[
				"IE",
				"IExceptionArrayItem	interface"
			],
			[
				"N",
				"Nonesense	class"
			],
			[
				"t",
				"togglePause	method"
			],
			[
				"set",
				"setInterval	function"
			],
			[
				"se",
				"seconds	property"
			],
			[
				"s",
				"seconds	property"
			],
			[
				"boo",
				"bootstrap	alias"
			],
			[
				"const",
				"constructor	keyword"
			],
			[
				"nu",
				"number	keyword"
			],
			[
				"cl",
				"class	class …"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Greeter.ts",
			"settings":
			{
				"buffer_size": 684,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Other.ts",
			"settings":
			{
				"buffer_size": 101,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { bootstrap } from '@angular/platform-browser-dynamic';\n\n@Component({\n	selector: 'countdown',\n	template: `<h1>Time left: {{seconds}}</h1>`\n})\n\nclass CountdownComponent {\n	@Input() seconds: number;\n	intervalId: number;\n	@Output() complete: EventEmitter<any> = new EventEmitter();\n	@Output() progress: EventEmitter<number> = new EventEmitter();\n\n	constructor(){\n		this.intervalId = setInterval(() => this.tick(), 1000);\n	}\n\n	private tick(): void {\n		if(--this.seconds < 1) {\n			clearInterval(this.intervalId);\n			this.complete.emit(null);\n		}\n		this.progress.emit(this.seconds);\n	}\n}\n\n@Component({\n	selector: 'pomodoro-timer',\n	directives: [CountdownComponent],\n	template: `<div class=\"container text-center\">\n	<img src=\"assets/img/pomodoro.png\" />\n	<countdown [seconds]=\"25\" \n		(complete)=\"onCountdownCompleted()\"\n		#counter>\n	</countdown>\n	<p>\n		<button class=\"btn btn-default\" (click)=\"counter.seconds = 25\">Reset countdown\n		</button>\n	</p>\n	<p *ngIf=\"counter.seconds < 10\">\n		Beware only <b>{{counter.seconds}} seconds</b> left.\n	</p>\n	</div>`\n})\nclass PomodoroTimerComponent{\n	\n	onCountdownCompleted(): void {\n		alert(\"Times up!\");\n	}\n}\nbootstrap(PomodoroTimerComponent);\n",
			"file": "pomodoro-timer.ts",
			"file_size": 1323,
			"file_write_time": 131149680149762796,
			"settings":
			{
				"buffer_size": 1255,
				"line_ending": "Windows"
			}
		},
		{
			"file": "tsconfig.json",
			"settings":
			{
				"buffer_size": 407,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Greetings.ts",
			"settings":
			{
				"buffer_size": 200,
				"line_ending": "Windows",
				"name": "export class Greeting{"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"git",
				"Github: Repository"
			],
			[
				"pack	",
				"Package Control: Install Package"
			]
		],
		"width": 912.0
	},
	"console":
	{
		"height": 113.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Windows/Logs/CBS/CBS.log",
		"/C/angular2/.gitignore",
		"/C/angular2/tsconfig.json",
		"/C/angular2/systemjs.config.js",
		"/C/angular2/package.json",
		"/C/angular2/Greeter.ts",
		"/C/angular2/pomodoro-timer.ts",
		"/C/angular2/index.html",
		"/C/angular2/hello-angular.ts",
		"/C/angular2/iVehicle.ts",
		"/C/angular2/duck-tape.ts",
		"/C/angular2/typings.json",
		"/C/Users/Rich/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/angular2/assets/img/pomodoro.png"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Greeter.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 684,
						"regions":
						{
						},
						"selection":
						[
							[
								373,
								373
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"translate_tabs_to_spaces": false,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Other.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 101,
						"regions":
						{
						},
						"selection":
						[
							[
								101,
								101
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "pomodoro-timer.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1255,
						"regions":
						{
						},
						"selection":
						[
							[
								895,
								902
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"translate_tabs_to_spaces": false,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 193.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "tsconfig.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 407,
						"regions":
						{
						},
						"selection":
						[
							[
								164,
								170
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Greetings.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 200,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "export class Greeting{",
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 43.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 160.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 160.0
	},
	"pinned_build_system": "",
	"project": "angular2.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 188.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
